{  
   "AWSTemplateFormatVersion":"2010-09-09",
   "Description":"AWS CloudFormation Template to deploy an Amazon Linux instance and install and configure GoPhish Phishing Campaign Platform solution.",
   "Parameters":{  
      "InstanceType":{  
         "Description":"GoPhish Application + Web Server + SMTP relay",
         "Type":"String",
         "Default":"t2.micro",
         "AllowedValues":[  
            "t1.micro",
            "t2.nano",
            "t2.micro",
            "t2.small",
            "t2.medium",
            "t2.large"
         ],
         "ConstraintDescription":"must be a valid EC2 instance type."
      },
      "KeyName":{  
         "Description":"GoPhish EC2 KeyPair to enable SSH access to the instances",
         "Type":"AWS::EC2::KeyPair::KeyName",
         "ConstraintDescription":"must be the name of an existing EC2 KeyPair."
      },
      "SSHLocation":{  
         "Description":"The IP address range that can be used to SSH to the EC2 instances",
         "Type":"String",
         "MinLength":"9",
         "MaxLength":"18",
         "Default":"0.0.0.0/0",
         "AllowedPattern":"(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
         "ConstraintDescription":"must be a valid IP CIDR range of the form x.x.x.x/x."
      }
   },
   "Mappings":{  
      "AWSInstanceType2Arch":{  
         "t1.micro":{  
            "Arch":"PV64"
         },
         "t2.nano":{  
            "Arch":"HVM64"
         },
         "t2.micro":{  
            "Arch":"HVM64"
         },
         "t2.small":{  
            "Arch":"HVM64"
         },
         "t2.medium":{  
            "Arch":"HVM64"
         },
         "t2.large":{  
            "Arch":"HVM64"
         }
      },
      "AWSInstanceType2NATArch":{  
         "t1.micro":{  
            "Arch":"NATPV64"
         },
         "t2.nano":{  
            "Arch":"NATHVM64"
         },
         "t2.micro":{  
            "Arch":"NATHVM64"
         },
         "t2.small":{  
            "Arch":"NATHVM64"
         },
         "t2.medium":{  
            "Arch":"NATHVM64"
         },
         "t2.large":{  
            "Arch":"NATHVM64"
         }
      },
      "AWSRegionArch2AMI":{  
         "us-east-1":{  
            "PV64":"ami-abc1ebbd",
            "HVM64":"ami-a4c7edb2"
         },
         "us-west-2":{  
            "PV64":"ami-98f3e7e1",
            "HVM64":"ami-6df1e514"
         },
         "us-west-1":{  
            "PV64":"ami-347e5254",
            "HVM64":"ami-327f5352"
         },
         "us-east-2":{  
            "PV64":"NOT_SUPPORTED",
            "HVM64":"ami-8a7859ef"
         }
      }
   },
   "Resources":{  
      "EC2Instance":{  
         "Type":"AWS::EC2::Instance",
         "Properties":{  
            "UserData":{  
               "Fn::Base64":{  
                  "Fn::Join":[  
                     "",
                     [  
                        "IPAddress=",
                        {  
                           "Ref":"IPAddress"
                        }
                     ]
                  ]
               }
            },
            "InstanceType":{  
               "Ref":"InstanceType"
            },
            "SecurityGroups":[  
               {  
                  "Ref":"InstanceSecurityGroup"
               }
            ],
            "KeyName":{  
               "Ref":"KeyName"
            },
            "ImageId":{  
               "Fn::FindInMap":[  
                  "AWSRegionArch2AMI",
                  {  
                     "Ref":"AWS::Region"
                  },
                  {  
                     "Fn::FindInMap":[  
                        "AWSInstanceType2Arch",
                        {  
                           "Ref":"InstanceType"
                        },
                        "Arch"
                     ]
                  }
               ]
            },
            "UserData":{  
               "Fn::Base64":{  
                  "Fn::Join":[  
                     "",
                     [  
                        "#!/bin/bash -v \n",
                        "yum -y install postfix \n",
                        "mkdir /usr/share/gophish-v0.6.0/  \n",
                        "mkdir /var/log/gophish-v0.6.0/  \n",
                        "aws s3 cp --recursive s3://software-share-913373464384/gophish-v0.6.0-linux-64bit/ /usr/share/gophish-v0.6.0/  \n",
                        "chmod +x /usr/share/gophish-v0.6.0/gophish \n",
                        "cp /usr/share/gophish-v0.6.0/scripts/gophish  /etc/init.d/ \n",
                        "chmod +x /etc/init.d/gophish \n",
                        "chkconfig --add gophish \n",
                        "chkconfig --levels 2345 gophish on \n",
                        "#edit main.cf file and change line #mynetworks_style = host to mynetworks_style = host \n",
                        "sed -i 's/^#mynetworks_style = host/mynetworks_style = host/g' /etc/postfix/main.cf \n",
                        "sed -i 's/^#relayhost = $mydomain/relayhost = $mydomain/g' /etc/postfix/main.cf \n",
                        "reboot now \n"
                     ]
                  ]
               }
            }
         }
      },
    "InstanceSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "allow connections from specified CIDR ranges",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "3333",
            "ToPort": "3333",
            "CidrIp": {
              "Ref": "Location"
            }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": {
              "Ref": "Location"
            }
          }
        ]
      }
    },
      "IPAddress":{  
         "Type":"AWS::EC2::EIP"
      },
      "IPAssoc":{  
         "Type":"AWS::EC2::EIPAssociation",
         "Properties":{  
            "InstanceId":{  
               "Ref":"EC2Instance"
            },
            "EIP":{  
               "Ref":"IPAddress"
            }
         }
      }
   },
   "Outputs":{  
      "InstanceId":{  
         "Description":"InstanceId of the newly created EC2 instance",
         "Value":{  
            "Ref":"EC2Instance"
         }
      },
      "InstanceIPAddress":{  
         "Description":"IP address of the newly created EC2 instance",
         "Value":{  
            "Ref":"IPAddress"
         }
      }
   }
}
